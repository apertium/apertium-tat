The purpose of tests in this folder is to test pardefs. In context of a lexc
file, with 'pardefs' we refer to lexicons which are continuations for stems (in
contrast to lexicons which are continuations for other lexicons).

For each such lexicon, we provide a prefix file in prefixes/, containing one
example word linked to that lexicon, with tags enough to distinguish it from
other words. These prefix files get compiled into transducers, which then get
intersected with the actual transducer of the language. The transducers
obtained by the intersection get expanded, and the results of this expansion
are stored in this folder in plain text files. [1]

Each file will show you the full paradigm of the example word linked to the
lexicon (indicated in the name of the file).

In ideal case, such test files should be provided before starting to work on
corresponding lexicons, but since our goal is to test an existing transducer,
in our case they serve for visualizing the current state of the transducer --
i.e. to see where it overgenerates or what forms aren't implemented yet. They
will also show you the morphophonology errors if there are any in the paradigm
of a particular word chosen for the test, but that's not their main purpose.
The main purpose is to see that morphotactics were implemented correctly and we
don't get any silly output.

The last point is important while working on a language pair involving our
transducer. It is a good idea to make sure that the output of the transducer
makes sense before trying to get a clean testvoc on it.

We can extract the lexical forms (the left part of the entries) from the test
files in this folder and pass them through the translator, as we would while
testvocing, but instead of the testing the full output of the transducer, we
test only one word per paradigm.

Notes
=====

[1] An easier way would be to expand the full transducer and then grep for
things like 'foo<adj>'. If the transducer is cyclic or simply too big to expand
in a reasonable time, this is problematic. Intersection seems to take less
time.
